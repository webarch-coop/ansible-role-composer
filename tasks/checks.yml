---
- name: Composer and PHP version checks
  block:

    - name: "The role requires PHP so check if {{ composer_php }} is installed"
      ansible.builtin.command: "which {{ composer_php }}"
      check_mode: false
      changed_when: false

    - name: Check the version of PHP
      ansible.builtin.command: "{{ composer_php }} -v"
      check_mode: false
      changed_when: false
      register: composer_php_v

    - name: Set a fact for the version of PHP
      ansible.builtin.set_fact:
        composer_php_version: "{{ line.split(' ')[1] | regex_replace('-.*$') }}"
      when: ansible_loop.first
      loop: "{{ composer_php_v.stdout_lines }}"
      loop_control:
        loop_var: line
        extended: true
        label: "line {{ ansible_loop.index }}"

    - name: Print the version of PHP installed
      ansible.builtin.debug:
        var: composer_php_version
        verbosity: 1

    - name: Print the version of Composer required
      ansible.builtin.debug:
        var: composer_version
        verbosity: 1

    - name: Check if Composer is installed
      ansible.builtin.command: which composer
      check_mode: false
      changed_when: false
      register: composer_which
      failed_when: composer_which.rc is not regex('0|1')

    - name: Check installed Composer version
      block:

        - name: Check the Composer version
          ansible.builtin.command: composer --no-ansi -V -n
          check_mode: false
          changed_when: false
          register: composer_v

        # The version format might be in a couple of forms
        # Composer version 1.10.9 2020-07-16 12:57:00
        # or
        # Composer 2.0.9 2021-01-27 16:09:27
        - name: Set a fact for the installed version of Composer
          ansible.builtin.set_fact:
            composer_installed: "{{ ( composer_v.stdout | regex_replace('Composer') | regex_replace('version') | trim ).split(' ')[0] | trim }}"

        - name: Print the installed version of Composer
          ansible.builtin.debug:
            var: composer_installed
            verbosity: 1

      when: composer_which.rc == 0

    - name: Check the latest version of Composer
      block:

        - name: Check the latest version of Composer
          ansible.builtin.uri:
            url: https://github.com/composer/composer/releases/latest
            method: HEAD
            status_code: 302
            follow_redirects: none
          check_mode: false
          register: composer_headers

        - name: Set a fact for the latest version of Composer
          ansible.builtin.set_fact:
            composer_latest: "{{ composer_headers.location | urlsplit('path') | basename }}"

        - name: Print the latest version of Composer
          ansible.builtin.debug:
            var: composer_latest
            verbosity: 1

      when: composer_version == "latest"

    - name: Check the latest 2.2 LTS version of Composer when the default PHP version is <= 7.2.4
      block:

        - name: Download latest 2.2 LTS version of Composer
          ansible.builtin.get_url:
            url: https://getcomposer.org/download/latest-2.2.x/composer.phar
            dest: /root/composer.2.2.x.phar
          check_mode: false
          changed_when: false

        - name: Check the latest 2.2 LTS version of Composer
          ansible.builtin.command: "{{ composer_php }} composer.2.2.x.phar --no-ansi -V -n"
          args:
            chdir: /root
          check_mode: false
          changed_when: false
          register: composer_v_lts

        - name: Set a fact for the latest 2.2 LTS version of Composer
          ansible.builtin.set_fact:
            composer_lts: "{{ composer_v_lts.stdout.split(' ')[2] | trim }}"

        - name: Print the latest LTS version of Composer
          ansible.builtin.debug:
            var: composer_lts
            verbosity: 1

        - name: Set the Composer version to be installed to the latest LTS when the default PHP version is <= 7.2.4
          ansible.builtin.set_fact:
            composer_version: "{{ composer_lts }}"
          when: composer_version == "latest"

        - name: Print the version of Composer required
          ansible.builtin.debug:
            var: composer_version
            verbosity: 1

      when: composer_php_version is version('7.2.4', '<=')

    # See https://blog.packagist.com/composer-2-3/
    - name: Check that PHP >= 7.2.5 when the latest Composer or a version greater than or equal to 2.3.0 is to be installed
      ansible.builtin.assert:
        that:
          - composer_php_version is version('7.2.5', '>=')
      when: ( composer_version == "latest" ) or ( composer_version is version('2.3.0', '>=' ) )

    - name: Check that the version of Composer to be installed is < 2.3.0 when PHP <= 7.2.4
      ansible.builtin.assert:
        that:
          - composer_version is version('2.3.0', '<')
      when: composer_php_version is version('7.2.4', '<=')

  tags:
    - composer
...
